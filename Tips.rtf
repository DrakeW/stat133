{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fmodern\fcharset0 Courier;\f2\fswiss\fcharset0 Helvetica;
\f3\froman\fcharset0 Times-Roman;\f4\fmodern\fcharset0 Courier-Oblique;\f5\fmodern\fcharset0 Courier-Bold;
}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;\red255\green255\blue255;\red52\green52\blue52;
\red21\green158\blue3;\red255\green255\blue223;\red140\green0\blue236;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs24 \cf0 rep each vs times\

\b0 \
> rep(1:13, each = 4)\
 [1]  1  1  1  1  2  2  2  2  3  3  3  3  4  4  4  4  5  5  5  5  6  6  6  6  7  7  7  7  8  8  8  8  9  9  9  9 10 10 10\
[40] 10 11 11 11 11 12 12 12 12 13 13 13 13\
> rep(1:13, times = 4)\
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13  1  2  3  4  5  6  7  8  9 10 11 12 13  1  2  3  4  5  6  7  8  9 10 11 12 13\
[40]  1  2  3  4  5  6  7  8  9 10 11 12 13\
\

\b Indexing Data Structure with multiple constrains.\

\b0 infants$ed[infants$marital == "Married" & infants$parity == 1]\
\

\b comma and place of $\

\b0 infants[infants$gestation >= 259, ]$bwt : my answer\
infants$bwt[infants$gestation >= 259] : solution\
\

\b plot\

\b0 boxplot(iris$Sepal.Length ~ iris$Species)    y axis ~ x axis; y against x; y axis versus\
\
hist(infants$age, prob=T, xlab="Mother's age")      prob = T <=> freq = F\
lines(density(infants$age, na.rm=T), col="blue")\
\

\b concatenate vectors\

\b0 dsum = c(dsum, sum(sample(c(1:6),size = k, replace = TRUE)))\
\

\b Sequence\

\b0 seq(from=2, by=2, length=1000)   from, to, by, length\
\

\b String manipulation\
\pard\pardeftab720\sl390

\b0 \cf0 grep: return indices\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 grepl: return logical vectors\
gsub: replace all occurrences of pattern\
gregexpr: for text, search each string in text separately, return all indices matching the pattern\
Use paste to concatenate strings:\
main=paste("Histogram for B=", Bvec[i])\
\

\b Matrix Indexing\

\b0 m[1,2] for row 1 col 2\
m[,1] for col 1\
\

\b Delete Column in Matrix\

\b0 m <- m[, -1] delete column 1 in matrix m.\
\

\b Setting Names in Matrix\

\b0 rownames(m) <- names\
colnames(m) <- names
\b \

\b0 \

\b Names of tables\

\b0 names(table)\

\b Apply
\b0 \
\pard\pardeftab720\sl390
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 apply - When you want to apply a function to the rows or columns of a matrix (and higher-dimensional analogues) \
\pard\pardeftab720

\f1\fs26 \cf0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 	apply(X, Margin) Margin :1
\f2 \expnd0\expndtw0\kerning0
 indicates rows, 
\f1 \expnd0\expndtw0\kerning0
2
\f2 \expnd0\expndtw0\kerning0
 indicates columns
\f0\fs24 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\sl390
\cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 lapply - When you want to apply a function to each element of a list in turn and get a list back.\
sapply - When you want to apply a function to each element of a list in turn, but you want a vector 		   back, rather than a list.\
apply - 
\f2 \cf0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Apply a Function to Multiple List or Vector Arguments\

\f0 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 	mapply(abline, a=coeff[,1], b=coeff[,2], col=rgb(1,0.2,0.8,alpha=0.2))\
tapply - 
\f3\fs28 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 The 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 tapply
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  function is useful when we need to break up a vector into groups defined by some classifying factor, compute a function on the subsets, and return the results in a convenient form. 
\f4\i\fs22 \cf5 \cb6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 tapply(Summary Variable, Group Variable, Function)
\f1\i0 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\sl360

\f5\b \cf7 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec7 >
\f1\b0 \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4  tapply(medical.example$age, medical.example$treatment, mean)\
Treatment   Control\
 62.26883  60.30371\
\pard\pardeftab720\sl390

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
by - \cf0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Apply a Function to a Data Frame Split by Factors\
	max.petal.width <- as.vector(by(iris$Petal.Width, iris$Species, max))\
\pard\pardeftab720

\fs26 \cf0 \expnd0\expndtw0\kerning0
replicate
\f1  - 
\f2 \expnd0\expndtw0\kerning0
is a wrapper for the common use of 
\f1 \expnd0\expndtw0\kerning0
sapply
\f2 \expnd0\expndtw0\kerning0
 for repeated evaluation of an 				expression (which will usually involve random number generation).\
		replicate(B, sum(sample(1:6, size=k, replace=T)) )\
\pard\pardeftab720\sl390

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\

\b regular expression\

\b0 text3 <- phrases[grep(".+((at)\{2,\}).+",phrases)]  at repeat more than 2 times\
gsub("[^a-z]","",lchvec) replace all things other than a-z with \'93\'94\
# The \\< stands for beginning of a word and\
# \\> stands for the end of a word\
# In R we have to escape the \\ with an extra \\\
# Find the word cat or caat or caaat, etc.\
caats = c("cat", "caat.", "caats", "caaaat", "my cat")\
grep("\\\\<ca+t\\\\>", caats)\

\f2\fs48 \
\pard\pardeftab720\sl390

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \
}